plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.alibaba.arouter'
    id 'com.didi.dokit'
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        //指定子模块的混淆文件
        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled true   //开启混淆
            zipAlignEnabled true  //压缩优化
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
            } else {
                resources {
                    //正式版本时，排除debug文件夹下所有调试文件
                    exclude 'src/debug/*'
                }
            }
        }
    }

}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    //公用资源在base中依赖
    api project(path: ':base-res')

    //support
    api "androidx.legacy:legacy-support-v4:${rootProject.dep.SupportV4}"
    api "androidx.appcompat:appcompat:${rootProject.dep.Appcompat}"
    api "androidx.recyclerview:recyclerview:${rootProject.dep.Recyclerview}"
    api "androidx.core:core-ktx:${rootProject.dep.Corektx}"
    api "androidx.fragment:fragment:${rootProject.dep.AndroidxFragment}"
    api "androidx.constraintlayout:constraintlayout:${rootProject.dep.Constraintlayout}"
    api "com.google.android.material:material:${rootProject.dep.Design}"

    //kotlin协程
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:${rootProject.dep.kotlinxCoroutinesAndroid}"
    //协程Viewmodel扩展库
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:${rootProject.dep.CoroutinesViewmodel}"
    //协程lifecycle扩展库
    api "androidx.lifecycle:lifecycle-runtime-ktx:${rootProject.dep.CoroutinesLifecycle}"

    //阿里路由库
    api "com.alibaba:arouter-api:${rootProject.dep.ArouterApi}"
    kapt "com.alibaba:arouter-compiler:${rootProject.dep.ArouterCompiler}"
    //RecyclerView相关
    api "com.github.CymChad:BaseRecyclerViewAdapterHelper:${rootProject.dep.Brvh}"
    //Agentweb
    api "com.just.agentweb:agentweb-androidx:${rootProject.dep.Agentweb}"
    //获取唯一标识方案
    api "com.github.gzu-liyujiang:Android_CN_OAID:${rootProject.dep.AndroidCNOAID}"
    //图片选择
    api "io.github.lucksiege:pictureselector:${rootProject.dep.Pictureselector}"
    //状态栏导航栏相关
    api "com.gyf.immersionbar:immersionbar:${rootProject.dep.Immersionbar}"
    api "com.gyf.immersionbar:immersionbar-components:${rootProject.dep.ImmersionbarComponents}"
    //[Debug] doraemonkit
    debugImplementation 'com.didichuxing.doraemonkit:dokitx:3.3.5'
    releaseImplementation 'com.didichuxing.doraemonkit:dokitx-no-op:3.3.5'
    //rxjava
    api "io.reactivex.rxjava2:rxjava:${rootProject.dep.Rxjava}"
    api "io.reactivex.rxjava2:rxandroid:${rootProject.dep.Rxandroid}"
    //Rxlifecycle
    api "com.trello.rxlifecycle2:rxlifecycle:${rootProject.dep.Rxlifecycle}"
    api "com.trello.rxlifecycle2:rxlifecycle-components:${rootProject.dep.RxlifecycleComponents}"

    //权限请求
    api("com.permissionx.guolindev:permissionx:${rootProject.dep.Permissionx}") {
        exclude group: 'com.android.support'
    }
    //network
    api "com.squareup.okhttp3:okhttp:${rootProject.dep.Okhttp}"
    api "com.squareup.retrofit2:retrofit:${rootProject.dep.Retrofit}"
    api "com.squareup.retrofit2:converter-gson:${rootProject.dep.ConverterGson}"
    api "com.squareup.retrofit2:adapter-rxjava2:${rootProject.dep.AdapterRxjava}"
    //json解析
    api "com.google.code.gson:gson:${rootProject.dep.Gson}"
    //glide图片加载库
    api("com.github.bumptech.glide:glide:${rootProject.dep.Glide}") {
        exclude group: 'com.android.support'
    }
    annotationProcessor "com.github.bumptech.glide:compiler:${rootProject.dep.GlideCompiler}"

    api "androidx.lifecycle:lifecycle-extensions:${rootProject.dep.LifecycleExtensions}"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:${rootProject.dep.LifecycleCompiler}"

    //更方便使用和避免采坑的Fragment的框架
    api "me.xuexuan:fragmentationx:${rootProject.dep.Fragmentationx}"
    api "me.xuexuan:fragmentationx-core:${rootProject.dep.FragmentationxCore}"
    //适配框架
    api "me.jessyan:autosize:${rootProject.dep.Autosize}"
    //dialog
    api "com.github.li-xiaojun:XPopup:${rootProject.dep.Xpopup}"


}